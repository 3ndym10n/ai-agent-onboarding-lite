[build-system]
requires = ["setuptools>=61.0", "wheel", "setuptools_scm"]
build-backend = "setuptools.build_meta"

[project]
name = "ai-onboard"
dynamic = ["version"]
description = "AI Onboard: drop-in project coach (charter + plan + align + validate + kaizen)"
readme = "README_ai_onboard.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "AI Onboard Team"}
]
keywords = ["ai", "onboarding", "project-management", "validation"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "PyYAML>=6.0.0",  # Required for policy loading (YAML policies)
    "setuptools_scm>=9.0.0",  # Required for dynamic versioning
    # Currently uses only standard library modules
    # Add external dependencies here as needed
]

[project.scripts]
ai-onboard = "ai_onboard.__main__:main"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
]

[tool.setuptools.packages.find]
where = ["."]
include = ["ai_onboard*"]

[tool.setuptools_scm]
version_file = "ai_onboard/VERSION.txt"
write_to = "ai_onboard/_version.py"

[tool.black]
line-length = 88
target-version = ['py38']

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

rules:
  # Core system protection
  - id: protect-core-system
    conditions:
      any:
        - deletes_globs: ["ai_onboard/**", "ai_onboard.py", "ai_onboard/**/*.py"]
        - deletes_globs: ["pyproject.toml", "AGENTS.md", "README_ai_onboard.md"]
        - deletes_globs: [".github/workflows/**", "scripts/protected_paths.py"]
    action: block
    message: "Core ai-onboard system files are protected from deletion."
    severity: critical

  # Self-preservation during cleanup
  - id: prevent-self-deletion
    conditions:
      all:
        - operation: cleanup
        - any:
          - deletes_globs: ["ai_onboard/**"]
          - deletes_globs: ["**/ai_onboard/**"]
          - deletes_globs: ["pyproject.toml"]
    action: block
    message: "Self-preservation: Cannot delete ai-onboard system during cleanup."
    severity: critical

  # Protect configuration files
  - id: protect-config-files
    conditions:
      any:
        - deletes_globs: ["**/ai_onboard.json", "**/.ai_onboard/**"]
        - deletes_globs: ["**/charter.json", "**/plan.json"]
        - deletes_globs: ["**/policy*.yaml", "**/policy*.json"]
    action: require_approval
    message: "Configuration files contain project vision and policies. Confirm deletion."
    severity: high

  # Protect learning and telemetry data
  - id: protect-learning-data
    conditions:
      any:
        - deletes_globs: ["**/debug_*.json", "**/debug_*.jsonl"]
        - deletes_globs: ["**/telemetry_*.json", "**/vision_log.jsonl"]
        - deletes_globs: ["**/milestone_log.jsonl", "**/decision_log.jsonl"]
    action: warn
    message: "Learning and telemetry data help improve system performance."
    severity: medium

  # Prevent malicious modifications
  - id: prevent-malicious-modifications
    conditions:
      any:
        - modifies_globs: ["ai_onboard/core/policy_engine.py"]
        - modifies_globs: ["ai_onboard/core/validation_runtime.py"]
        - modifies_globs: ["scripts/protected_paths.py"]
    action: require_approval
    message: "Core validation and protection systems require explicit approval to modify."
    severity: high

  # Protect agent integration points
  - id: protect-agent-apis
    conditions:
      any:
        - modifies_globs: ["ai_onboard/core/prompt_bridge.py"]
        - modifies_globs: ["ai_onboard/cli/commands.py"]
        - deletes_globs: ["ai_onboard/cli/**"]
    action: require_approval
    message: "Agent integration APIs are critical for system operation."
    severity: high

  # Prevent policy bypass
  - id: prevent-policy-bypass
    conditions:
      any:
        - modifies_globs: ["ai_onboard/policies/base.yaml"]
        - modifies_globs: ["ai_onboard/policies/self_preservation.yaml"]
        - deletes_globs: ["ai_onboard/policies/**"]
    action: block
    message: "Policy files cannot be modified or deleted to prevent bypass."
    severity: critical

  # Protect version control
  - id: protect-version-control
    conditions:
      any:
        - deletes_globs: [".git/**", ".gitignore"]
        - modifies_globs: [".gitignore"]
    action: require_approval
    message: "Version control configuration affects project history and collaboration."
    severity: medium

  # Prevent environment corruption
  - id: prevent-env-corruption
    conditions:
      any:
        - deletes_globs: ["**/.env*", "**/environment*", "**/config.env"]
        - modifies_globs: ["**/.env*", "**/environment*"]
    action: require_approval
    message: "Environment files may contain critical configuration."
    severity: high

  # Protect documentation
  - id: protect-documentation
    conditions:
      any:
        - deletes_globs: ["**/*.md", "**/docs/**", "**/README*"]
        - modifies_globs: ["AGENTS.md", "README_ai_onboard.md"]
    action: warn
    message: "Documentation helps maintain project clarity and continuity."
    severity: medium

  # Prevent dependency corruption
  - id: prevent-dependency-corruption
    conditions:
      any:
        - deletes_globs: ["requirements.txt", "pyproject.toml", "setup.py", "Pipfile"]
        - modifies_globs: ["pyproject.toml", "requirements.txt"]
    action: require_approval
    message: "Dependency files affect project build and deployment."
    severity: high

# Enhanced approval workflow
approvals:
  mode: console
  required_for:
    - require_approval
    - block
  escalation:
    - threshold: 3
      action: require_human_review
    - threshold: 5
      action: block_all_operations

# Self-preservation specific defaults
defaults:
  require_checkpoint_when: ["require_approval", "block"]
  backup_before_cleanup: true
  preserve_system_state: true

# Emergency recovery
emergency:
  recovery_mode: true
  backup_interval: "1h"
  critical_files:
    - "ai_onboard/__init__.py"
    - "ai_onboard/__main__.py"
    - "ai_onboard/cli/commands.py"
    - "ai_onboard/core/policy_engine.py"
    - "pyproject.toml"
    - "AGENTS.md"
